name: Publish to npm

on:
  push:
    branches:
      - main
    paths:
      - 'src/**'
      - 'package.json'
      - '.github/workflows/publish.yml'

# Add explicit permissions for the GITHUB_TOKEN
permissions:
  contents: write
  packages: write

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Lint
        run: yarn lint        
          
      - name: Run tests
        run: yarn test

      - name: Detect version bump
        id: version-check
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          LAST_TAG_VERSION=${LAST_TAG#v}
          
          echo "Current version: $CURRENT_VERSION, Last tag version: $LAST_TAG_VERSION"
          
          # Check if the current version is greater than the last tagged version
          if [ "$CURRENT_VERSION" != "$LAST_TAG_VERSION" ]; then
            echo "Version has been bumped from $LAST_TAG_VERSION to $CURRENT_VERSION"
            echo "version_changed=true" >> $GITHUB_OUTPUT
            echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          else
            echo "Version not changed. Will not publish."
            echo "version_changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Build package
        if: steps.version-check.outputs.version_changed == 'true'
        run: yarn build

      - name: Publish to npm
        if: steps.version-check.outputs.version_changed == 'true'
        run: yarn publish --non-interactive
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        if: steps.version-check.outputs.version_changed == 'true'
        uses: ncipollo/release-action@v1
        with:
          tag: "v${{ steps.version-check.outputs.current_version }}"
          name: "Release v${{ steps.version-check.outputs.current_version }}"
          generateReleaseNotes: true
          token: ${{ secrets.GITHUB_TOKEN }}
          makeLatest: legacy
          replacesArtifacts: true
